function parseUserscriptMetadata(r){r=r.match(/^\/\/\s*==UserScript==\s*$(.*?)^\/\/\s*==\/UserScript==\s*$/ms);if(!r)return null;r=r[1].split("\n").map(r=>r.trim()).filter(r=>0<r.length);let a={};var t,e=/^\/\/\s@([\w-]+)(?::([A-Za-z0-9-]+))?\s+(.*)$/;for(t of r){var s,i,n=t.match(e);n&&(s=n[1],i=n[2]||null,n=n[3].trim(),i=i,n=n,s=(s=s).toLowerCase(),i?(a[s]||(a[s]={}),a[s][i.toLowerCase()]=n):void 0===a[s]?a[s]=n:Array.isArray(a[s])?a[s].push(n):a[s]=[a[s],n])}return a.name=a.name||"Untitled Script",a.version=a.version||"1.0",a.match=a.match||a.include||["*://*/*"],a}function parseZedataBlock(r){try{var a,t,e=r.match(/\/\*\s*zedata\s*(\{[\s\S]*?\})\s*\*\//i);return e&&e[1]?(a=e[1],{name:(t=JSON.parse(a)).name||"Untitled Script",version:t.version||"1.0",match:t.match||["*://*/*"],description:t.description||"",author:t.author||"",...t}):null}catch(r){return console.error("Error parsing Zedata block:",r),null}}function parseScriptMetadata(r){var a=parseZedataBlock(r);return a?{...a,_format:"zedata"}:(a=parseUserscriptMetadata(r))?{...a,_format:"userscript"}:null}export{parseZedataBlock,parseUserscriptMetadata,parseScriptMetadata};